<?php
/**
 * Content Functions
 * 
 * Description: adjust wordpress settings for using next.js app
 */

// add theme support for menus
function warpnextjs_add_theme_support() {
    add_theme_support( 'menus' );
    
}
add_action( 'after_setup_theme', 'warpnextjs_add_theme_support' );

// get option page setting
function WarpNextSetting( $name, $default = false ) {
    $response = $default;
    $settings = get_option( 'warpnextjs_settings', array() );
    
    if ( isset( $settings[ $name ] ) ) {
		$response = $settings[ $name ];
	}

    return $response;
}

// get all settings from option page
function WarpNextSettings() {
	$settings = get_option( 'warpnextjs_settings', array() );
	return apply_filters( 'WarpNextSettings', $settings );
}

// update setting on option page
function WarpNextUpdateSetting( $name, $value ) {
	$settings          = WarpNextSettings();
	$settings[ $name ] = $value;

	update_option( 'warpnextjs_settings', $settings );
}

// set app url based on setting from option page - it will change links in previews
define( 'NEXTJS_APP_URL', WarpNextSetting( 'frontend_url', 'http://localhost:3000' ) );

// add Menu locations
function warpnextjs_register_menu_locations() {
    $menu_locations = WarpNextSetting( 'menu_locations', 'Primary, Footer' );
    $menu_locations = preg_replace('/\s+/', '', $menu_locations);
    $menu_locations = explode(',', $menu_locations);

    if ( is_array( $menu_locations ) && !empty( $menu_locations )) {
        foreach( $menu_locations as $menu_location ) {
        	register_nav_menu(strtoupper($menu_location), ucfirst(strtolower($menu_location)));
        }
    }
}
add_action( 'init', 'warpnextjs_register_menu_locations' );

// WPGRAPHQL - Increase perPage for all queries
add_filter( 'graphql_connection_max_query_amount', function ( int $max_amount, $source, array $args, $context, $info ) {
	return WPGRAPHQL_MAX_QUERY_AMOUNT;
}, 10, 5 );

// add JWT secret key for graphql
add_filter( 'graphql_jwt_auth_secret_key', function() {
    return GRAPHQL_SECRET_KEY;
});

// set expiration of JWT
function warpnextjs_jwt_expiration( $expiration ) {
    return 60;
}
add_filter('graphql_jwt_auth_expire', 'warpnextjs_jwt_expiration', 10);

// add domain to allowed hosts
function warpnextjs_allowed_redirect_hosts( $hosts ) {
    $hosts = wp_parse_args( $hosts, array( 'localhost', '0.0.0.0' ) );
    $nextjs_app_url = wp_parse_url( NEXTJS_APP_URL, PHP_URL_HOST );

    if ( $nextjs_app_url ) {
        $hosts[] = $nextjs_app_url;
    }

	return $hosts;
};
add_filter( 'allowed_redirect_hosts', 'warpnextjs_allowed_redirect_hosts' );

// get global styles generated by wordpress
add_action("graphql_register_types", function () {
    if ( function_exists('register_graphql_field') ) {
        // Temporary fix for global stylesheet added in WordPress 5.9:
        // https://github.com/wp-graphql/wp-graphql/issues/2259
        register_graphql_field('RootQuery', 'globalStylesheet', [
            'type' => 'String',
            'resolve' => function () {
                return wp_get_global_stylesheet([]);
            },
        ]);
    }
});

// Restore the original user.
add_action( 'graphql_process_http_request_response', 'WarpNextResetCurrentUserPreview' );
function WarpNextResetCurrentUserPreview() {
    $original_user_id = get_current_user_id();
    wp_set_current_user( $original_user_id );
}

// Get first admin user ID
function get_first_admin_user_id() {
    $query = new WP_User_Query( 
        array(
            'role' => 'Administrator',
            'count_total' => false,
            'number' => 1,
            'fields' => 'ID'
        )
    );

    $role_results = $query->get_results();
    if ( !empty( $role_results ) && is_array( $role_results ) ) {
        return $role_results[0];
    }

    return null;
}

// if keys are equal (WP & Next.js) while graphql request - allow to return preview data
add_action( 'init_graphql_request', 'WarpNextCurrentUserPreview' );
function WarpNextCurrentUserPreview() {
    $headerSecretKey = isset($_SERVER['HTTP_X_WARPNEXTJS_SECRET']) ? $_SERVER['HTTP_X_WARPNEXTJS_SECRET'] : null;
    $settingsSecretKey = WarpNextSetting('secret_key' , '');

    if ($headerSecretKey === $settingsSecretKey) {
        wp_set_current_user( get_first_admin_user_id() );
    }
}
